<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mongle.userservice.mapper.UserMapper">
    <!-- User 엔티티와 DB 컬럼 매핑 -->
    <resultMap id="UserResultMap" type="com.mongle.userservice.entity.User">
        <id column="user_pk" property="userId" />
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="nickname" property="nickname"/>
        <result column="password" property="password"/>
        <result column="created_date" property="createDate"/>
        <result column="update_date" property="updateDate"/>
    </resultMap>

    <!--  회원가입  -->
    <insert id="signup" parameterType="com.mongle.userservice.entity.User" useGeneratedKeys="true" keyProperty="userId" keyColumn="user_pk">
        INSERT INTO user(id,user_pk,name,nickname,email,password,created_date,update_date)
        VALUES(#{id},#{userId},#{name},#{nickname},#{email},#{password},NOW(),NOW());
    </insert>

    <select id="countById" resultType="int">
        SELECT COUNT(*) FROM user WHERE id = #{id}
    </select>

    <select id="countByEmail" resultType="int">
        SELECT COUNT(*) FROM user WHERE email = #{email}
    </select>

    <select id="countByNickname" resultType="int">
        SELECT COUNT(*) FROM user WHERE nickname = #{nickname}
    </select>
    <select id="findById" resultMap="UserResultMap">
        SELECT * FROM user WHERE id = #{id}
    </select>

    <!--  회원 정보 조회  -->
    <select id="getUserInfo" resultMap="UserResultMap">
        SELECT id, name, nickname, email
        FROM user
        WHERE user_pk = #{userId}
    </select>

    <!-- 회원탈퇴 -->
    <delete id="deleteUser">
        DELETE FROM user WHERE user_pk = #{userId}
    </delete>

    <!-- 이름 수정  -->
    <update id="updateUserName">
        UPDATE user
        SET name = #{newName}, update_date = NOW()
        WHERE user_pk = #{userId}
    </update>

    <!-- 닉네임 수정   -->
    <update id="updateUserNickName">
        UPDATE user
        SET nickname = #{newNickName}, update_date = NOW()
        WHERE user_pk = #{userId}
    </update>

    <!-- 아이디 찾기   -->
    <select id="findIdByEmail" resultType="string">
        SELECT id FROM user WHERE email = #{email}
    </select>

    <!--  현재 비밀번호 조회  -->
    <select id="getPasswordByUserId" resultType="string">
        SELECT password FROM user WHERE user_pk = #{userId}
    </select>

    <!--  새로운 비밀번호 변경  -->
    <update id="updateUserPassword">
        UPDATE user
        SET password = #{newPassword}, update_date = NOW()
        WHERE user_pk = #{userId}
    </update>


</mapper>